/* Bootstrap 4 media query -------------------------------*/
@mixin viewport($point) {
  @if $point==small {
      // Small devices (landscape phones, 34em and up) 544px
      @media (max-width:  480px) {
          @content;
      }
  }
  @else if $point==medium {
      // Medium devices (tablets, 48em and up) 768px
      @media (max-width: 768px) {
          @content;
      }
  }
  @else if $point==large {
      // Large devices (desktops, 62em and up) 992px npm install --save-dev gulp-sprite
      @media (max-width: 992px) {
          @content;
      }
  }
  @else if $point==xlarge {
      // Extra large devices (large desktops, 75em and up) 1200px
      @media (max-width: 1200px) {
          @content;
      }
  }


  /* Device specific media query
  -------------------------------*/
  @else if $point==mobileOnly {
    // Mininum 320px and maximum 768px
    @media (min-width: 320px) and (max-width: 480px) {
        @content;
    }
  }
  @else if $point==mobileLandscape {
      // Mininum 320px and orientation landscape
      @media (min-width: 320px) and (orientation: landscape) {
          @content;
      }
  }
  @else if $point==ipadOnly {
      // Mininum 768px and maximum 1024px ipad portrait and landscape only
      @media (min-width: 480px) and (max-width: 768px) {
          @content ;
      }
  }
  @else if $point==ipadPortrait {
      // Mininum 768px and ipad orientation portrait
      @media (min-width: 480px) and (orientation: portrait) {
          @content;
      }
  }
  @else if $point==ipadLandscape {
      // Mininum 768px and ipad orientation landscape
      @media (min-width: 768px) and (orientation: landscape) {
          @content;
      }
  }
  @else if $point==desktop {
      // Mininum 1024px
      @media (min-width: 769px) {
          @content;
      }
  }
}


@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

/* width
-------------------------------*/
@mixin width($width, $margin, $padding){
  width: $width;
  margin: $margin;
  clear: both;
  padding: $padding;
}

/* Max width
-------------------------------*/
@mixin maxWidth($width, $margin, $padding){
max-width: $width;
width:100% ;
clear: both;
margin: $margin;
padding: $padding;
}

/* Border
-------------------------------*/
@mixin border($width, $color){
	border:solid $width $color;
}


/* Border - Top
-------------------------------*/
@mixin border-top($width, $color){
	border-top:solid $width $color;
}

/* Border - bottom
-------------------------------*/
@mixin border-bottom($width, $color){
	border-bottom:solid $width $color;
}

/* Border - left
-------------------------------*/
@mixin border-left($width, $color){
	border-left:solid $width $color;
}

/* Border - right
-------------------------------*/
@mixin border-right($width, $color){
	border-right:solid $width $color;
}

/* Transparent outline
-------------------------------*/

@mixin font-family($family){
  @if $family==bold {
    font-family: $font-stack-bold;
  } @else if $family==medium {
    font-family: $font-stack-medium;
  } @else if $family==regular {
    font-family: $font-stack-regular;
  } @else if $family==light {
    font-family: $font-stack-light;
  } @else {
    font-family: $font-stack-regular;
  }
}

@mixin color($color){
	color: $color;
}

@mixin shadow($size, $color){
  -webkit-box-shadow: $size $color;  /* Safari 3-4, iOS 4.0.2 - 4.2, Android 2.3+ */
  -moz-box-shadow:    $size $color;  /* Firefox 3.5 - 3.6 */
  box-shadow:         $size $color;  /* Opera 10.5, IE 9, Firefox 4+, Chrome 6+, iOS 5 */
}

// generic transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}
// rotate
@mixin rotate($deg) {
    @include transform(rotate(#{$deg}deg));
}
// translateY
@mixin translateX($x) {
    @include transform(translateX($x));
}
// scaleXx
@mixin scaleX($x) {
    @include transform(scaleX($x));
}
// Add two type in transform
@mixin transform-add-two($transform1, $transform2){
    @include transform($transform1 $transform2);
}
@mixin color($color){
	color: $color;
}
// mixin for input placefolder
@mixin placeholder-color($color) {
    &::-webkit-input-placeholder { /* WebKit browsers */
        color: $color;
    }
    &:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
        color: $color;
    }
    &::-moz-placeholder { /* Mozilla Firefox 19+ */
        color: $color;
    }
    &:-ms-input-placeholder { /* Internet Explorer 10+ */
        color: $color;
    }
  }

// Add background image mixin
@mixin background-image($startColor, $midColor, $endColor) {
  background-image: -ms-linear-gradient(top, $startColor 0%, $midColor 50%, $endColor 100%);
  background-image: -moz-linear-gradient(top, $startColor 0%, $midColor 50%, $endColor 100%);
  background-image: -o-linear-gradient(top, $startColor 0%, $midColor 50%, $endColor 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, $startColor), color-stop(50, $midColor), color-stop(100, $endColor));
  background-image: -webkit-linear-gradient(top, $startColor 0%, $midColor 50%, $endColor 100%);
  background-image: linear-gradient(to bottom, $startColor 0%, $midColor 50%, $endColor 100%);
}

